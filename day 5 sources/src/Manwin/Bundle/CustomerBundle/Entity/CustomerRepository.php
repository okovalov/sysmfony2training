<?php

namespace Manwin\Bundle\CustomerBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;  //VERY IMPORTANT
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends EntityRepository implements UserProviderInterface
{
	public function loadUserByUsername($username)
	{
		$q = $this
		  ->createQueryBuilder('c')
		  ->where('c.username = :username')
		  ->andWhere('c.isActive = :isActive') //we must use not a filed name but a property name
		  ->setParameter('isActive', true)
		  ->setParameter('username', $username)
		  ->getQuery()
		;
		 // we must throw ONLY this one UsernameNotFoundException()
		
		try {
		  $user = $q->getSingleResult();	
		} catch (NoResultException $e) {
			throw new UsernameNotFoundException(
			     sprintf('Unable to fetch the ManwinCustomerBundle:Customer object identified by "%s"', $username),
			     'String with an extra info', // we can pass null
			     0, // 0 is an exception code - I can define this exception code 
			     $e
			);
		}
		
		return $user;
	}
	
	public function refreshUser(UserInterface $user)
	{
		$username  = $user->getUsername();
		
		try {
			$user = $this->loadUserByUsername($username);
		} catch (UsernameNotFoundException $e) {
			throw new UnsupportedUserException(
                 sprintf('Unable to refresh the ManwinCustomerBundle:Customer object identified by "%s"', $username),
                 'String with an extra info', // we can pass null
                 0, // 0 is an exception code - I can define this exception code 
                 $e			 
			);
		} 
		
		return $user;
	}
	
	public function supportsClass($class) 
	{
		return 'Manwin\Bundle\CustomerBundle\Entity\Customer' === $class;
	} 
	
}