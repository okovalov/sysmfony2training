<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ManwinBundleCustomerBundleDocumentCustomerHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data)
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (string) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['first_name'])) {
            $value = $data['first_name'];
            $return = (string) $value;
            $this->class->reflFields['firstName']->setValue($document, $return);
            $hydratedData['firstName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['last_name'])) {
            $value = $data['last_name'];
            $return = (string) $value;
            $this->class->reflFields['lastName']->setValue($document, $return);
            $hydratedData['lastName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['company'])) {
            $value = $data['company'];
            $return = (string) $value;
            $this->class->reflFields['company']->setValue($document, $return);
            $hydratedData['company'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['birthday'])) {
            $value = $data['birthday'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['birthday']->setValue($document, $return);
            $hydratedData['birthday'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['nb_projects'])) {
            $value = $data['nb_projects'];
            $return = (int) $value;
            $this->class->reflFields['nbProjects']->setValue($document, $return);
            $hydratedData['nbProjects'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['hobbies'])) {
            $value = $data['hobbies'];
            $return = $value;
            $this->class->reflFields['hobbies']->setValue($document, $return);
            $hydratedData['hobbies'] = $return;
        }

        /** @EmbedOne */
        if (isset($data['address'])) {
            $embeddedDocument = $data['address'];
            $className = $this->dm->getClassNameFromDiscriminatorValue($this->class->fieldMappings['address'], $embeddedDocument);
            $embeddedMetadata = $this->dm->getClassMetadata($className);
            $return = $embeddedMetadata->newInstance();

            $embeddedData = $this->dm->getHydratorFactory()->hydrate($return, $embeddedDocument);
            $this->unitOfWork->registerManaged($return, null, $embeddedData);
            $this->unitOfWork->setParentAssociation($return, $this->class->fieldMappings['address'], $document, 'address');

            $this->class->reflFields['address']->setValue($document, $return);
            $hydratedData['address'] = $return;
        }
        return $hydratedData;
    }
}